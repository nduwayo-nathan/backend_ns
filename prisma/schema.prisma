generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  name     String @db.VarChar(100)
  email    String @unique @db.VarChar(100)
  password String
  role     Role   @default(USER)

  vehicles     Vehicle[]
  slotRequests SlotRequest[]
  logs         Log[]

  @@map("users")
}

model Vehicle {
  id          Int    @id @default(autoincrement())
  plateNumber String @unique @map("plate_number") @db.VarChar(20)
  vehicleType String @map("vehicle_type") @db.VarChar(50)
  size        String @db.VarChar(20)
  additionalAttributes Json? @map("additional_attributes")


  userId Int  @map("user_id")
  user   User @relation(fields: [userId], references: [id])

  slotRequests SlotRequest[]

  @@map("vehicles")
}

model ParkingSlot {
  id          Int        @id @default(autoincrement())
  slotNumber  String     @unique @map("slot_number") @db.VarChar(20)
  size        String     @db.VarChar(20)
  vehicleType String     @map("vehicle_type") @db.VarChar(50)
  status      SlotStatus @default(AVAILABLE)
  location    Location

  slotRequests SlotRequest[]

  @@map("parking_slots")
}

model SlotRequest {
  id            Int           @id @default(autoincrement())
  requestStatus RequestStatus @default(PENDING) @map("request_status")
  createdAt     DateTime      @default(now()) @map("created_at")
  updatedAt     DateTime      @updatedAt @map("updated_at")

  userId Int
  user   User @relation(fields: [userId], references: [id])

  vehicleId Int
  vehicle   Vehicle @relation(fields: [vehicleId], references: [id])

  slotId Int
  slot   ParkingSlot @relation(fields: [slotId], references: [id])

  slotNumber String @db.VarChar(20)

  @@map("slot_requests")
}

model Log {
  id        Int      @id @default(autoincrement())
  action    String
  timestamp DateTime @default(now())

  userId Int
  user   User @relation(fields: [userId], references: [id])

  @@map("logs")
}

enum Role {
  USER
  ADMIN
}

enum SlotStatus {
  AVAILABLE
  OCCUPIED
  RESERVED
}

enum RequestStatus {
  PENDING
  APPROVED
  REJECTED
}

enum Location {
  NORTH
  SOUTH
  EAST
  WEST
}
